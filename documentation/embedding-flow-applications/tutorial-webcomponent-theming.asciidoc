---
title: Theming Embedded Applications
order: 3
layout: page
---

= Theming Embedded Applications

Theming of embedded applications works in exactly the same way as for any other Vaadin component. 

By default, embedded Vaadin applications use the `Lumo` theme (if it is found in the classpath), or no theme at all.

See <<../theme/theming-overview#,Theming Overview>> for more.


== Assigning a Theme


You can specify a theme, for example the `Material` theme, for your embedded Vaadin application using the `@Theme` annotation. 


*Example*: Using the `@Theme` annotation to apply the `Material` theme to the `MyExporter` embedded application.  

[source, java]
----
@Theme(Material.class)
public class MyExporter
        extends WebComponentExporter<Div> {
----



// what does this mean "It's enough to specify a theme only for one exporter in your application." ? If you have two exported components is it used automatically??

== Using Multiple Themes

It is not possible to use more than one theme in a single embedded application. Themes are detected during build time (or startup in compatibility mode's
development mode) and an exception is thrown if different themes are found.

If you need to use multiple themes, create multiple embedded applications (one per theme) and split the functionality accordingly. Each embedded application uses its own theme and the main application embeds several themed applications instead of one.

