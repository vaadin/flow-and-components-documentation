---
title: All Vaadin properties
order: 18
layout: page
---

ifdef::env-github[:outfilesuffix: .asciidoc]

= All Vaadin properties

There are a number of properties that you can use to configure your Flow application.

This document summarizes the properties defines in
https://github.com/vaadin/flow/blob/399424cef1a8989bb05cc9d6e589b3801e196b26/flow-server/src/main/java/com/vaadin/flow/function/DeploymentConfiguration.java[com.vaadin.server.DeploymentConfiguration]
and
https://github.com/vaadin/flow/blob/e5c2e4b98e26c3e7ba40ce681f9762d970ff4c0a/flow-server/src/main/java/com/vaadin/flow/server/Constants.java[com.vaadin.server.Constants]
classes.

These properties can be set from the command line as a system property, as a Servlet init parameter in the `web.xml` or using the `@WebServlet` annotation.
For further information, please consult the tutorial <<tutorial-flow-runtime-configuration#, Changing Flow behavior with runtime configuration>>.

[NOTE]
If you use Spring Boot then you should add the prefix `vaadin.`, e.g. vaadin.productionMode=true.

.Vaadin properties
[width="100%",cols="3,10",frame="topbot",options="header"]
|==========================
|Property |Description

|productionMode |
Turns application to work in production mode.
The intention of the goal is to process application web files in order to optimize them for production usage: minify them, transpile to ES5 and bundle them (squash all frontend files into bigger files to reduce the amount of server round-trips).

|requestTiming |
If request timing info should be made available.
If true, in each response the server includes some basic timing information.
This can be used for performance testing.

|disable-xsrf-protection |
Cross-site request forgery protection. This protection is enabled by default, but it might need to be disabled to allow a certain type of testing.
For these cases, the check can be disabled by setting the init parameter

|heartbeatInterval |
Vaadin UIs that are open on the client side send a regular heartbeat to the server to indicate they are still alive, even though there is no ongoing user interaction.
When the server does not receive a valid heartbeat for a given UI, it will eventually remove that UI from the session.
Vaadin UIs that are open on the client side send a regular heartbeat to the server to indicate they are still alive, even though there is no ongoing user interaction.
When the server does not receive a valid heartbeat for a given UI, it will eventually remove that UI from the session.

|closeIdleSessions |
When it is set to true (the default is false), the session will be closed if no UI is active.
Heartbeat requests are just like any other request from the servlet containerâ€™s viewpoint.
This means that as long as there is an open UI, the session never expires even though there is no user interaction.
You can control this behavior by setting an init parameter named closeIdleSessions to true.

|pushMode |
The permitted values are "disabled" or "manual". <<tutorial-push-configuration#, See `push` documentation>>.

|pushURL |
It is the url to use for push requests. Some servers require a predefined URL to push.
<<tutorial-push-configuration#, See `push` documentation>>.

|syncIdCheck |
Returns whether sync id checking is enabled. The sync id is used to gracefully handle situations
when the client sends a message to a connector that has recently been removed on the server.
By the fault, it is true.

|sendUrlsAsParameters |
Returns whether the sending of URL's as GET and POST parameters in requests with content-type
<code>application/x-www-form-urlencoded</code>is enabled or not.

|pushLongPollingSuspendTimeout |
When using the long polling transport strategy,  it specifies how long it accepts responses after
each network request. Number of milliseconds.

|load.es5.adapters |
Include polyfills for browsers that does not support ES6 to their initial page. In order for
web components to work, extra libraries (polyfills) are required to be loaded, can be turned off
if different versions or libraries should be included instead.

|frontend.url.es5 |
A location Flow searches web components' files in production mode when the request is coming
from older browsers, not supporting es6, default web components' development language version.

|frontend.url.es6 |
A location Flow searches web components' files in production mode for requests from modern browsers.

|disable.webjars |
Configuration name for the parameter that determines if Flow should use webJars or not.
If set to true, webjars would be ignored during request resolving, allowing Flow to use external source of web components' files.

|original.frontend.resources |
Configuration name for the parameter that determines if Flow should use bundled fragments or not.

|i18n.provider |
I18N provider property. To use localization and translation strings the application only needs to implement `I18NProvider` and define the fully qualified class name in the property `i18n.provider`.

|disable.automatic.servlet.registration |
Configuration name for the parameter that determines if Flow should automatically register servlets needed for the application to work.

|==========================