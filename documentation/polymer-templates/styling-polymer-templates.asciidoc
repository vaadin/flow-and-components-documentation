---
title: Styling Templates
order: 7
layout: page
---

= Styling Templates

Since client-side templates are Web Components, their content is inside shadow DOM. By design, shadow DOM defines a local style scope that is isolated from global styles. See <<../../themes/style-scopes#,Style Scopes>> for more information.

== LitElement

You can add component-specific scoped styles directly in the static `styles` template property.

.`my-view.js`
[source,js]
----
import {LitElement, html, css} from 'lit-element';

class MyView extends LitElement {

  static get styles() {
    return css`
        :host {
          /* Styles for the <my-view> host element */
          display: block;
        }

        .my-view-title {
          font-weight: bold;
          border-bottom: 1px solid gray;
        }
    `;
  }

  render() {
    return html`
      <h2 class="my-view-title">My view title</h2>
    `;
  }
}

customElements.define('my-view', MyView);
----

== PolymerTemplate

You can add component-specific scoped styles directly in the `<style>` tag in the template getter.

.`my-view.js`
[source,js]
----
import {PolymerElement} from '@polymer/polymer/polymer-element.js';
import {html} from '@polymer/polymer/lib/utils/html-tag.js';

class MyView extends PolymerElement {

  static get template() {
    return html`
      <style>
        :host {
          /* Styles for the <my-view> host element */
          display: block;
        }

        .my-view-title {
          font-weight: bold;
          border-bottom: 1px solid gray;
        }
      </style>
      <h2 class="my-view-title">My view title</h2>
    `;
  }

  static get is() {
    return 'my-view';
  }
}

customElements.define(MyView.is, MyView);
----
