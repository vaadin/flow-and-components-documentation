---
title: Taking your Application into Production
order: 1
layout: page
---

ifdef::env-github[:outfilesuffix: .asciidoc]

= Taking your Application into Production

== Simple steps for production mode build

To get your application prepared for production you want to create a production mode profile which brings in
the production-mode dependency.

.pom.xml
[source, xml]
----
<profiles>
    <profile>
        <id>production</id>
        <properties>
            <vaadin.productionMode>true</vaadin.productionMode>
        </properties>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-server-production-mode</artifactId>
            </dependency>
        </dependencies>
    </profile>
</profiles>
----

If you only have the `prepare-frontend` goal in the `vaadin-maven-plugin` then you need to add the `build-frontend` goal
to the plugin or define the whole plugin in the production profile:

.pom.xml
[source, xml]
----
<profiles>
    <profile>
        <id>production</id>
        <properties>
            <vaadin.productionMode>true</vaadin.productionMode>
        </properties>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-server-production-mode</artifactId>
            </dependency>
        </dependencies>
        <build>
            <plugins>
                <plugin>
                    <groupId>com.vaadin</groupId>
                    <artifactId>vaadin-maven-plugin</artifactId>
                    <version>${vaadin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-frontend</goal>
                                <goal>build-frontend</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
</profiles>
----

The profile is recommended so that you don't get any unexpected problems due to
production settings when running in development mode.

[NOTE]
For users who use `Vaadin Flow` only, you can use `flow-maven-plugin` as artifactId and match the version number with current Flow version

After this all that is needed is to run `mvn clean package -Pproduction`.

The simplest way to get a production ready setup is to get a project base from https://vaadin.com/start

[NOTE]
If your environment(OS) is 64bit make sure to use JDK 64bit as well. There is a known issue when JDK 32bit is used on a 64bit environment.

[NOTE]
For an old project running with bower see V13 documentation about the production mode.

== What is transpilation and bundling

Transpilation in Flow means converting all ES6 JavaScript to ES5 JavaScript format for older browsers.

[NOTE]
IOS 10 has a known issue with https://caniuse.com/#search=let[`let bindings in for loops are incorrectly treated as function-scoped instead of block scoped`], in this case, all browsers running on it need the transpilation, too.

Minimisation is done to make the file smaller. When minifying the code of also often obscured making it harder to read.

Bundling is an optimisation where we merge multiple files to a collection so that the browser doesn't need to
request so many files making loading faster.
