---
title: Setup Live Reload using HotswapAgent
order: 6
layout: page
---

= Setup Live Reload using HotswapAgent

Live Reload works seamlessly on development mode using HotswapAgent for runtime class and resource redefinition.
If you want to know more about the features of HotswapAgent, the documentation in the http://hotswapagent.org/[HotswapAgent webpage] is a good resource.

Currently, Live Reload works on HotswapAgent version 1.4.1-SNAPSHOT and newer. Since no versions of the DCEVM JDK are still bundled with these versions, a HotswapAgent override is required by including the newer HotswapAgent versions as a Java agent in your JVM options.

== Step-by-step guide

. Download https://github.com/TravaOpenJDK/trava-jdk-11-dcevm/releases[DCEVM JDK], unpack it and set `JAVA_HOME` to it's location. Alternatively, you can add the JDK to your IDE.
. Download https://github.com/HotswapProjects/HotswapAgent/releases[HotswapAgent 1.4.1-SNAPSHOT]
. Set your `javaagent` VM argument as such `-javaagent:<path-to-file>/hotswap-agent-1.4.1.jar`
. When using an IDE, follow setup guides available in http://hotswapagent.org/
. Depending on your project technology stack, you might have to apply <<Additional configurations>>
. Run (or Debug) Vaadin application in Dev Mode
. Navigate to any page in your application, edit a Java file in the project, recompile, and the browser will automatically reload

== Additional configurations

* If you're running HotswapAgent using DCEVM 8 and Netbeans, adding the configuration parameter `=autoHotswap=true` might be needed for Live Reload to work. VM configuration for debugging (available at `Project Properties > Actions > Actions: Debug project > Set Properties`) should look like this `Env.MAVEN_OPTS=-XXaltjvm=dcevm -javaagent:<path-to-file>/hotswap-agent-1.4.1-SNAPSHOT.jar=autoHotswap=true`.
* When using Jetty as server set `<scanIntervalSeconds>` in your Vaadin application `pom.xml` to `0`
