---
title: Changes in theming for Polymer 3 (npm)
order: 7
layout: page
---

= Migrating Theming files from Polymer 2 to Polymer 3

The most significant change in Polymer 3.0 is that Html Imports are not used anymore, and instead we need to use ES6 modules.

== Steps to migrate `.html` theming files to `.js`

Given the following example for Polymer 2 in a V13 application:

[source, xml]
----
<link rel="import" href="../bower_components/polymer/lib/elements/custom-style.html">

<dom-module id="my-app-layout-theme" theme-for="vaadin-app-layout">
  <template>
    <style>
      :host {
        background-color: var(--lumo-shade-5pct) !important;
      }
      [part="content"] {
        height: 100%;
      }
    </style>
  </template>
</dom-module>

<custom-style>
  <style>
    .v-system-error {
        color: red;
    }
  </style>
</custom-style>
----

We need to follow the next steps to convert to Polymer 3, so as it is usable in a V14 application.

1. At the beginning of the file import the `html-tag` utility library:

[source, js]
----
import { html } from '@polymer/polymer/lib/utils/html-tag.js';
----


2. Write the basic JavaScript code to dynamically create a template element to be appended to the `<head>` of the document.

[source, js]
----
import { html } from '@polymer/polymer/lib/utils/html-tag.js';

const $_documentContainer = document.createElement('template');
$_documentContainer.innerHTML = ``;
document.head.appendChild($_documentContainer.content);
----


3. Enclose the Polymer 2 HTML code inside the `html` back-ticks block:
[source, js]
----
import { html } from '@polymer/polymer/lib/utils/html-tag.js';

const $_documentContainer = document.createElement('template');
$_documentContainer.innerHTML = `<dom-module id="my-app-layout-theme" theme-for="vaadin-app-layout">
  <template>
    <style>
      :host {
        background-color: var(--lumo-shade-5pct) !important;
      }
      [part="content"] {
        height: 100%;
      }
    </style>
  </template>
</dom-module>

<custom-style>
  <style>
    .v-system-error {
        color: red;
    }
  </style>
</custom-style>`;
document.head.appendChild($_documentContainer.content);
----

4. Replace the `@HtmlImport` annotation with `@JsModule` in your java code

[source,java]
----
@Route(value = "")
@JsModule("./styles/shared-styles.js")
public class MyApplication extends Div {
}
----
