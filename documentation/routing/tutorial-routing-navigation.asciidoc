---
title: Navigating Between Routes
order: 7
layout: page
---

= Navigating Between Routes

== Using the RouterLink Component

You can use the `RouterLink` component to create links pointing to route targets in your application.

Navigation with `RouterLink` fetches the content of the new component without reloading the page. The page is updated in place.

*Example*: Using `RouterLink` for navigation targets, with and without URL parameters.
[source,java]
----
void routerLink() {
    Div menu = new Div();
    menu.add(new RouterLink("Home", HomeView.class));
    menu.add(new RouterLink("Greeting",
            GreetingComponent.class, "default"));
}
----

*Example*: GreetingComponent with URL parameter.
[source,java]
----
@Route(value = "greet")
public class GreetingComponent extends Div
        implements HasUrlParameter<String> {

    @Override
    public void setParameter(BeforeEvent event,
            String parameter) {
        setText(String.format("Hello, %s!", parameter));
    }
}
----

== Using Standard href Links

It is also possible to navigate with standard `<a href="company">` type links.

Standard links result in a page reload, but you can enable navigation without page reload by adding the `router-link` attribute, for example `<a router-link href="company">Go to the company page</a>`.


== Server-side Navigation

You can trigger navigation from the server side using `UI.navigate(String)`, where the string parameter is the location to navigate to.

You can also use `UI.navigate(Class<? extends Component> navigationTarget)` or `navigate(Class<? extends C> navigationTarget, T parameter)`. This avoids having to generate the route string manually and triggers the browser location update and the addition of a new history state entry.

*Example*: Navigation to the `company` route target when clicking a button:

[source,java]
----
NativeButton button = new NativeButton(
        "Navigate to company");
button.addClickListener(e ->
     button.getUI().ifPresent(ui ->
           ui.navigate("company"))
);
----

[NOTE]
`Router` links work even if the session has expired. We recommend that you use them instead of handling navigation on the server side.
