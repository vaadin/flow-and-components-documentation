---
title: Router for Both Client-side and Server-side
order: 1
layout: page
---

= Intro Vaadin Router

As a developer, sometimes you just want your application to have server-side view
or client-side view, but sometimes you also would like to develop your application
in both.

With Vaadin, you can do any way you like because we provide 2 types of routing.

The first one is `@Route` annotation and the other one is `TypeScript routing`.

== What is the @Route Annotation?

`@Route` annotaion is used to navigate between server-side views in an application.

When you want to define any component as a route target for a URL fragment, let's use it.

we will guide how to use `Route` annotation in <<tutorial-routing-annotation#,next chapter>>
and other interesting things related to `@Router` annotation in this section.

== TypeScript routing

If you are looking for a way to combine client and server views in an application,
Congratulation!!! You are in the right place.

TypeScript routing(`@vaadin/router`) allow adding client-side routes and server-side routes
and navigate between them. You can also use it without server-side views.

We will explain more about `@vaadin/router` how to use it and how it works in <<../typescript/creating-routes#, Creating UI in TypeScript>> section.

[NOTE]
 Now, you know what is Vaadin Router and how many types of routing we have, so you can know which one is better for you.
