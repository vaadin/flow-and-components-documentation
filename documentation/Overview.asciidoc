---
title: Overview
order: 1
layout: page
---

ifdef::env-github[:outfilesuffix: .asciidoc]
= Vaadin Flow

Vaadin Flow is a new Java web framework for building modern web apps and websites.
It is part of the Vaadin Platform and a successor for the Vaadin Framework bringing Web Component support to Java users.
Flow allows developers to be super productive by creating UIs in Java or
by using HTML Templates for composing the UI and binding it to any backend using Java.

The power of Vaadin Flow comes from the following concepts:

* A set of beautiful UI components build with focus on end-user and developer experience
* Powerful abstraction layers for easily building your own reusable UI components with either Java or HTML templates
* Data Binding API for connecting the UI components to any backend using type safe Java
* Router API for easily creating hierarchical page structures for the user to navigate

This is the documentation for Vaadin Flow. It is divided into the following subsections in recommended reading order.

== Introduction and Getting Started
* <<introduction/introduction-overview#,Introduction to Vaadin Flow>>
* https://vaadin.com/tutorials/getting-started-with-flow[Getting started with Vaadin Flow]

== Router and Navigation
Router is a core concept in Vaadin Flow, enabling Navigation for your website or web app.
It is based on HTML5 History API, and makes it possible for the user to navigate pages back and forward,
and keep the page state intact. The following tutorials explain how to use the Router:

* <<routing/tutorial-routing-annotation#,Defining Routes with @Route>>
* <<routing/tutorial-routing-lifecycle#,Navigation Lifecycle>>
* <<routing/tutorial-router-layout#,Router Layouts and Nested Router Targets>>
* <<routing/tutorial-router-url-parameters#,URL Parameters for Navigation Targets>>
* <<routing/tutorial-routing-url-generation#,URL generation>>
* <<routing/tutorial-routing-navigation#,Navigating Between Routes>>
* <<routing/tutorial-routing-page-titles#,Updating Page Title on Navigation>>
* <<routing/tutorial-routing-exception-handling#,Router Exception Handling>>
* <<routing/tutorial-routing-get-registered-routes#,Getting Registered Routes>>
* <<routing/tutorial-router-dynamic-routes#,Dynamic Route Registration>>

== Browser features and events
* <<browser/tutorial-flow-window-resize#,Browser Window Resize Events>>
* <<browser/tutorial-execute-javascript#,Executing JavaScript from Server Side>>

== Using Vaadin Components
* <<components/tutorial-flow-components-setup#,Using Vaadin Components>>
* <<components/tutorial-component-basic-features#,Component Basic Features>>
* <<components/tutorial-enabled-state#, Component Enabled State>>
* <<components/tutorial-flow-grid#,Grid>>
* <<components/tutorial-flow-icon#,Using Icons>>

== Binding Data to Components
* <<binding-data/tutorial-flow-components-binder#,Binder overview>>
* <<binding-data/tutorial-flow-components-binder-validation#,Validating and Converting User Input>>
* <<binding-data/tutorial-flow-components-binder-load#,Loading from and Saving to Business Objects>>
* <<binding-data/tutorial-flow-components-binder-beans#,Binding Beans to Forms>>
* <<binding-data/tutorial-flow-data-provider#,Showing a list of data with Data Providers>>

== Importing HTML, JavaScript and CSS files
* <<importing-dependencies/tutorial-include-css#,Including Style Sheets>>
* <<importing-dependencies/tutorial-importing#,Importing html/javascript>>
* <<importing-dependencies/tutorial-ways-of-importing#,Ways of importing the dependencies>>

== Theming Applications
* <<theme/theming-overview#,Theming Overview>>
* <<theme/using-component-themes#,Using Component Themes>>
* <<theme/application-theming-basics#,Application Theming Basics>>
* <<theme/theming-crash-course#,Theming Crash Course>>
* <<theme/integrating-component-theme#,Integrating Your Own Component Theme>>

== Creating Components
* <<creating-components/tutorial-component-basic#,Creating A Simple Component Using the Element API>>
* <<creating-components/tutorial-component-many-elements#,Creating a Component Based on Many Elements>>
* <<creating-components/tutorial-component-property-descriptor#,Using API Helpers for Defining Component Properties>>
* <<creating-components/tutorial-component-composite#,Creating a Component Using Existing Components>>
* <<creating-components/tutorial-component-events#,Using Events with Components>>
* <<creating-components/tutorial-component-container#,Creating a Component Which Can Contain Other Components>>
* <<creating-components/tutorial-component-lifecycle-callbacks#,Component Lifecycle Callbacks>>

== Manipulating DOM with Element API
* <<element-api/tutorial-properties-attributes#,Element Properties and Attributes>>
* <<element-api/tutorial-event-listener#,Listening to User Events>>
* <<element-api/tutorial-user-input#,Retrieving User Input>>
* <<element-api/tutorial-dynamic-styling#,Dynamic styling>>
* <<element-api/tutorial-shadow-root#,Shadow root in server-side Element>>

== Integrating Web Components
* <<web-components/integrating-a-web-component#,Integrating a Web Component>>
* <<web-components/creating-java-api-for-a-web-component#,Creating Java API for a Web Component>>
* <<web-components/debugging-a-web-component-integration#,Debugging a Web Component Integration>>
* <<web-components/creating-another-type-of-addon#,Creating Another type of Add-on>>
* <<web-components/creating-an-in-project-web-component#,Creating an In-project Web Component>>
* <<web-components/introduction-to-webcomponents#,Introduction to Web Components>>

== Creating Polymer Templates
* <<polymer-templates/tutorial-template-basic#,Creating A Simple Component Using the Template API>>
* <<polymer-templates/tutorial-template-components#,Binding Components from PolymerTemplate>>
* <<polymer-templates/tutorial-template-subtemplate#,Using sub-template from PolymerTemplate>>
* <<polymer-templates/tutorial-template-components-in-slot#,Using <slot> in PolymerTemplates>>
* <<polymer-templates/tutorial-template-event-handlers#,Handling User Events in a PolymerTemplate>>
* <<polymer-templates/tutorial-template-bindings#,Binding Model Data in a PolymerTemplate>>
** <<polymer-templates/tutorial-template-bindings#two-way-binding,Two-way data binding>>
* <<polymer-templates/tutorial-template-list-bindings#,Using List of Items in a PolymerTemplate with template repeater>>
* <<polymer-templates/tutorial-template-model-bean#,Using Beans with a PolymerTemplate Model>>
* <<polymer-templates/tutorial-template-model-encoders#,Using Model Encoders with a PolymerTemplate Model>>

== Using Vaadin with Spring
* <<spring/tutorial-spring-basic#,Use Vaadin with Spring>>
* <<spring/tutorial-spring-basic-mvc#,Use Vaadin with Spring MVC>>
* <<spring/tutorial-spring-routing#,Routing with Spring>>
* <<spring/tutorial-spring-scopes#,Vaadin Spring Scopes>>
* <<spring/tutorial-spring-configuration#,Vaadin Spring Configuration>>
* <<spring/tutorial-spring-examples#,Getting Started with Spring and Vaadin>>

== Using Vaadin with CDI
* <<cdi/tutorial-cdi-basic#,Use Vaadin with CDI>>
* <<cdi/tutorial-cdi-instantiated-beans#,Components instantiated by the framework>>
* <<cdi/tutorial-cdi-contexts#,Vaadin CDI contexts>>
* <<cdi/tutorial-cdi-events#,Observable Vaadin events>>
* <<cdi/tutorial-cdi-service-beans#,Vaadin service interfaces as a CDI bean>>
* <<cdi/tutorial-cdi-examples#,Getting Started with CDI and Vaadin>>

== Use Vaadin with OSGi
* <<osgi/tutorial-osgi-basic#,Vaadin OSGi Support>>
* <<osgi/tutorial-osgi-components#,Create OSGi compatible components>>

== Packaging for Production
* <<production/tutorial-production-mode-basic#,Taking your Application into Production>>
* <<production/tutorial-production-mode-customising#,Customising Bundling>>
* <<production/tutorial-production-mode-advanced#,Advanced production mode topics>>

== Embedding Flow Applications
* <<embedding-flow-applications/tutorial-webcomponent-exporter#,Embedding a Flow Application>>
* <<embedding-flow-applications/tutorial-webcomponent-properties#,Properties of Embedded Web Components>>
* <<embedding-flow-applications/tutorial-webcomponent-theming#,Theming an Embedded Application>>
* <<embedding-flow-applications/tutorial-webcomponent-push#,Embedded Application Push Configuration>>
* <<embedding-flow-applications/tutorial-webcomponent-production#,Embedded Application in Production>>
* <<embedding-flow-applications/tutorial-webcomponent-security#,Securing an Embedded Application>>

== Progressive Web Applications
* <<pwa/tutorial-pwa-introduction#,Introduction>>
* <<pwa/tutorial-pwa-pwa-with-flow#,Creating PWA with Flow>>
* <<pwa/tutorial-pwa-icons#,Application Icons>>
* <<pwa/tutorial-pwa-web-app-manifest#,Web App Manifest>>
* <<pwa/tutorial-pwa-service-worker#,Service Worker>>
* <<pwa/tutorial-pwa-offline#,Offline experience>>

== Migrating from Vaadin 8 to Vaadin platform
* <<migration/1-migrating-v8-v10#,Migrating from Vaadin 8 to Vaadin platform>>
* <<migration/2-migration-strategies#,Migration Strategies>>
* <<migration/3-general-differences#,Differences between Vaadin platform and Vaadin 8 Applications>>
* <<migration/4-routing-navigation#,Routing and Navigation>>
* <<migration/5-components#,Components in Vaadin platform>>
** <<migration/5-components#components,Component Set>>
** <<migration/5-components#basic-features,Basic Component Features>>
** <<migration/5-components#layouts,Layouts in Vaadin platform>>
* <<migration/6-theming#,Themes and Theming Applications>>
* <<migration/7-tools-integrations#,Add-ons, Integrations and Tools>>

== Advanced Topics
* <<advanced/tutorial-application-lifecycle#,Application Lifecycle>>
* <<advanced/tutorial-i18n-localization#,Application Localization (I18N)>>
* <<advanced/tutorial-bootstrap#,Modifying the bootstrap page>>
* <<advanced/tutorial-flow-runtime-configuration#,Flow runtime configuration>>
* <<advanced/tutorial-loading-indicator#,Customizing the Loading Indicator>>
* <<advanced/tutorial-push-configuration#,Server Push Configuration>>
* <<advanced/tutorial-push-access#,Asynchronous Updates>>
* <<advanced/tutorial-push-broadcaster#,Creating Collaborative Views>>
* <<advanced/tutorial-dependency-filter#,Modifying how dependencies are loaded with DependencyFilters>>
* <<advanced/tutorial-service-init-listener#,Configure RequestHandlers, BootstrapListeners and DependencyFilters using VaadinServiceInitListener>>
* <<advanced/tutorial-dynamic-content#,Showing Dynamic Content>>
* <<advanced/tutorial-history-api#,History API>>
* <<advanced/tutorial-stream-resources#,Using stream resources>>
* <<advanced/tutorial-ui-init-listener#,UIInitListener>>
